server:
  http_listen_address: 0.0.0.0
  http_listen_port: 9080

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://host.docker.internal:3100/loki/api/v1/push

scrape_configs:
- job_name: system
  static_configs:
  - targets:
      - localhost
    labels:
      job: varlogs
      __path__: /var/log/*log

- job_name: containers
  static_configs:
  - targets:
      - localhost
    labels:
      job: containerlogsA
      __path__: /var/lib/docker/containers/*/*log

- job_name: serial_data
  static_configs:
    - targets:
        - localhost
  relabel_configs:
    - source_labels: ['log_message']
      regex: 'encoder1: (.*)'
      target_label: 'encoder1'
    - source_labels: ['log_message']
      regex: 'Ax: (.*)'
      target_label: 'ax'
    - source_labels: ['log_message']
      regex: 'Altitude: (.*)'
      target_label: 'altitude'
    - source_labels: ['log_message']
      regex: 'Temp: (.*)'
      target_label: 'temp'
    - source_labels: ['log_message']
      regex: 'Ayak: (.*)'
      target_label: 'ayak'
    - source_labels: ['container_name']
      regex: 'hazar'
      action: keep
      target_label: 'container_name'


  pipeline_stages:
  - json:
      expressions:
        output: log
        stream: stream
        attrs:
  - json:
      expressions:
        tag:
      source: attrs
  - regex:
      expression: (?P<image_name>(?:[^|]*[^|])).(?P<container_name>(?:[^|]*[^|])).(?P<image_id>(?:[^|]*[^|])).(?P<container_id>(?:[^|]*[^|]))
      source: tag
  - timestamp:
      format: RFC3339Nano
      source: time
  - labels:
      tag:
      stream:
      image_name:
      container_name:
      image_id:
      container_id:
  - output:
      source: output
